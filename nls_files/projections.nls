to-report map-x-quadrant-first-fourth [ x ]
  
  report ( min-pxcor + x ) - 1
  
end

to-report map-y-quadrant-second-third [ y ]
  
  report ( min-pycor + y ) - 1
  
end

to project-scope-markers-to-patches-in-reasoning [ goal-found? mapping-function-x mapping-function-y ]
  
  let mapped-x ( runresult mapping-function-x [pxcor] of patch-here )
  let mapped-y ( runresult mapping-function-y ( [pycor] of patch-here + world-height + 1 ) )
  
  let x ifelse-value ( abs mapped-x <= max-pxcor ) [ mapped-x ] [ ifelse-value ( mapped-x < 0 ) [ min-pxcor ] [ max-pxcor ] ]
  let y ifelse-value ( abs mapped-y <= max-pycor ) [ mapped-y ] [ ifelse-value ( mapped-y < 0 ) [ min-pycor ] [ max-pycor ] ]
  
  ifelse ( goal-found? )
  [ 
    ask patch x y 
    [ 
      set pcolor magenta 
      set goal? true 
    ] 
  ]
  [ ask patch x y [ set pcolor memory-pcolor-max ] ]
  
end

to project-patch-to-trail [ p searcher-zero-id mapping-function-x ]

  let mapped-x ( runresult mapping-function-x [pxcor] of p )
  
  ask patch mapped-x [ pycor ] of p 
  [
    if ( not any? turtles-here with [ who = searcher-zero-id ] )
    [
      set pcolor trail-pcolor-max
    ] 
  ]

end
