extensions [ csv ]

to write-data [ distances headings ]
  
  output-distance-normalizations distances
  output-heading-normalizations headings
  output-collisioned-with 
  
end

to-report get-heading-normalizations-filename
  
  report get-filename ( word "results/headings/heading-normalizations" normalize-distance-with ) 
  
end

to-report get-distance-normalizations-filename
  
  report get-filename ( word "results/distances/distance-normalizations" normalize-distance-with ) 
  
end

to-report get-full-path-filename 
  
  report get-filename ( word "results/paths/path" normalize-distance-with ) 
  
end

to-report get-collisions-filename
  
  report get-filename ( word "results/collisions/collisions" normalize-distance-with ) 
  
end

to output-heading-normalizations [ headings ]
  
  let filename get-heading-normalizations-filename
  
  output-data filename headings
  
end

to output-distance-normalizations [ distances ]
  
  let filename get-distance-normalizations-filename
  
  output-data filename distances
  
end

to output-full-path [ path ]
  
  let filename get-full-path-filename
  
  output-data filename path
  
end

to output-collisioned-with 
  
  let filename get-collisions-filename
  
  output-data filename collisioned-with
  
end

to-report get-filename [ filename-part ]
  
  report ( word filename-part behaviorspace-run-number ".csv" )
  
end  

to output-data [ filename data ]
  
  if ( file-exists? filename )
  [
    file-delete filename
  ]
  
  csv:to-file filename data
  
end